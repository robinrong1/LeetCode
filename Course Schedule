class Solution:
    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:
       graph = defaultdict(list)

       for course, prereq in prerequisites:
            graph[course].append(prereq)
        
        visited = {}

        def dfs(course):
            if course in visited:
                return visited[course] == 1
            visited[course] = -1
            for neighbor in graph[course]:
                if not dfs(neighbor):
                    return False
            visited[course] = 1
            return True
        for course in range(numCourses):
            if not dfs(course):
                return False
        return True
